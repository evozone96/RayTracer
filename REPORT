 The assignment (A3) was divided evenly among the two members, with one member focused on generating the ray and shading each ray correctly and another focused on finding the correct intersection. 
 
 The code works as follows, we generate one ray for each pixel we need to color, the ray is first in camera coordinates and then converted into world coordinates. For each ray, we find the first item it hits. If it does not hit any objects, we then find the location of the hit, the normal of the surface of the object it hits, and using the Phong model, compute the correct colour. We then shoot a reflected ray from that surface and find further objects that it hits, adding those components to our current colour. This is done up to a certain recursive level.
 
 The most difficult component of the assignment was ensuring that the intersections work correctly, that the file was written correctly. The correct implementation required thorough understanding of geometry, transformations, and lighting. As a result, each member gained better understanding of the material.
 
 The results for the three images of assignment 3 are in A3-1.ppm, A3-2, and A3-3 respectively. 
 
 For assignment 4, we divided the tasks based on common relevancy. Texture and environmental mapping are very similar, and both are important to implementing te scene. Multithreading, supersampling and area light are similar in that they all involve scaling the number of rays up while remaining fast. In additional, we implemented the quadric compounded surface of a cylinder.
